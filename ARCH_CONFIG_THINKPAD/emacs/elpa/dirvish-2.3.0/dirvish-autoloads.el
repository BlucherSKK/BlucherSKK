;;; dirvish-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from dirvish.el

(defvar dirvish-override-dired-mode nil "\
Non-nil if Dirvish-Override-Dired mode is enabled.
See the `dirvish-override-dired-mode' command
for a description of this minor mode.
Setting this variable directly does not take effect;
either customize it (see the info node `Easy Customization')
or call the function `dirvish-override-dired-mode'.")
(custom-autoload 'dirvish-override-dired-mode "dirvish" nil)
(autoload 'dirvish-override-dired-mode "dirvish" "\
Let Dirvish take over Dired globally.

This is a global minor mode.  If called interactively, toggle the
`Dirvish-Override-Dired mode' mode.  If the prefix argument is positive,
enable the mode, and if it is zero or negative, disable the mode.

If called from Lisp, toggle the mode if ARG is `toggle'.  Enable the
mode if ARG is nil, omitted, or is a positive number.  Disable the mode
if ARG is a negative number.

To check whether the minor mode is enabled in the current buffer,
evaluate `(default-value \\='dirvish-override-dired-mode)'.

The mode's hook is called both when the mode is enabled and when it is
disabled.

(fn &optional ARG)" t)
(autoload 'dirvish "dirvish" "\
Open PATH in a fullframe Dirvish session.
Prompt for PATH if called with \\[universal-arguments], otherwise PATH
defaults to `default-directory'.

(fn &optional PATH)" t)
(autoload 'dirvish-dwim "dirvish" "\
Open PATH in a fullframe session if selected window is the only window.
Prompt for PATH if called with \\[universal-arguments], otherwise PATH
defaults to `default-directory'.  If there are other windows exist in the
selected frame, the session occupies only the selected window.

(fn &optional PATH)" t)
(register-definition-prefixes "dirvish" '("dirvish-"))


;;; Generated autoloads from dirvish-extras.el

 (autoload 'dirvish-setup-menu "dirvish-extras" nil t)
(autoload 'dirvish-copy-file-name "dirvish-extras" "\
Copy filename of marked files.
If MULTI-LINE, make every name occupy a new line.

(fn &optional MULTI-LINE)" t)
(autoload 'dirvish-copy-file-path "dirvish-extras" "\
Copy filepath of marked files.
If MULTI-LINE, make every path occupy a new line.

(fn &optional MULTI-LINE)" t)
(autoload 'dirvish-total-file-size "dirvish-extras" "\
Echo total file size of FILESET.
FILESET defaults to `dired-get-marked-files'.

(fn &optional FILESET)" t)
(autoload 'dirvish-layout-switch "dirvish-extras" "\
Switch Dirvish layout according to RECIPE.
If RECIPE is not provided, switch to the recipe next to the
current layout defined in `dirvish-layout-recipes'.

(fn &optional RECIPE)" t)
 (autoload 'dirvish-file-info-menu "dirvish-extras" nil t)
 (autoload 'dirvish-chxxx-menu "dirvish-extras" nil t)
 (autoload 'dirvish-mark-menu "dirvish-extras" nil t)
 (autoload 'dirvish-renaming-menu "dirvish-extras" nil t)
 (autoload 'dirvish-dired-cheatsheet "dirvish-extras" nil t)
 (autoload 'dirvish-dispatch "dirvish-extras" nil t)
(register-definition-prefixes "dirvish-extras" '("dirvish-"))


;;; Generated autoloads from dirvish-fd.el

 (autoload 'dirvish-fd-switches-menu "dirvish-fd" nil t)
(autoload 'dirvish-fd "dirvish-fd" "\
Run `fd' on DIR and go into Dired mode on a buffer of the output.
The command run is essentially:

  fd --color=never `dirvish-fd-switches'
     --and PATTERN [--and PATTERN1 --and PATTERN2 â€¦ ]
     --exec-batch `dirvish-fd-ls-program' `dired-listing-switches' --directory

If called with \\`C-u', prompt for the target directory,
`default-directory' is used.  If prefixed with \\`C-u' twice, also
prompt for the search regex PATTERN as a comma separated list.

(fn DIR PATTERN)" t)
(register-definition-prefixes "dirvish-fd" '("dirvish-fd-"))


;;; Generated autoloads from dirvish-tramp.el

(register-definition-prefixes "dirvish-tramp" '("dirvish-tramp-"))


;;; Generated autoloads from dirvish-widgets.el

(register-definition-prefixes "dirvish-widgets" '("dirvish-"))

;;; End of scraped data

(provide 'dirvish-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; dirvish-autoloads.el ends here
